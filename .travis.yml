# Originally contributed by @rbuffat to Toblerity/Fiona
# https://github.com/Toblerity/Shapely/blob/master/.travis.yml
language: python
sudo: false
notifications:
    email: false
cache:
  directories:
    - $GDALINST
    - ~/.cache/pip
env:
  global:
    - PIP_WHEEL_DIR=$HOME/.cache/pip/wheels
    - PIP_FIND_LINKS=file://$HOME/.cache/pip/wheels
    - GDALINST=$HOME/gdalinstall
    - GDALBUILD=$HOME/gdalbuild
  matrix:
    - GDALVERSION="2.0.1"
    - GDALVERSION="2.1.3"
    - GDALVERSION="2.2.2"
    - GDALVERSION="trunk"

matrix:
  allow_failures:
    - env: GDALVERSION="trunk"

addons:
  apt:
    packages:
    - gdal-bin
    - libproj-dev
    - libhdf5-serial-dev
    - libgdal-dev
    - libatlas-dev
    - libatlas-base-dev
    - gfortran

python:
  - "2.7"
  - "3.4"
  - "3.5"
  - "3.6"

before_install:
  - pip install -U pip wheel coveralls
  - pip install setuptools==36.0.1
  - . ./scripts/travis_gdal_install.sh
  - export PATH=$GDALINST/gdal-$GDALVERSION/bin:$PATH
  - export LD_LIBRARY_PATH=$GDALINST/gdal-$GDALVERSION/lib:$LD_LIBRARY_PATH
  - export GDAL_DATA=$GDALINST/gdal-$GDALVERSION/share/gdal
  - export PROJ_LIB=/usr/share/proj
  - gdal-config --version
  - pip list -l

install:
  - if [ "$GDALVERSION" == "trunk" ]; then echo "Using gdal trunk"; elif [ $(gdal-config --version) == "$GDALVERSION" ]; then echo "Using gdal $GDALVERSION"; else echo "NOT using gdal $GDALVERSION as expected; aborting"; exit 1; fi
  - pip install --upgrade --force-reinstall --global-option=build_ext --global-option='-I$GDALINST/gdal-$GDALVERSION/include' --global-option='-L$GDALINST/gdal-$GDALVERSION/lib' --global-option='-R$GDALINST/gdal-$GDALVERSION/lib' -e .
  - pip install -e .[test]
  - gdal-config --version

script:
  - pytest

after_success:
  - coveralls || echo "!! intermittent coveralls failure"

before_cache:
  - if [ "$GDALVERSION" = "trunk" ]; then rm -rf $GDALINST/gdal-$GDALVERSION; fi
